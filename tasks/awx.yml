---
- name: Create directory for AWX
  file:
    path: "{{ awx_home }}"
    state: directory
    owner: root
    group: root
    mode: 0750

- name: Clone AWX
  git:
    repo: https://github.com/ansible/awx
    dest: "{{ awx_home }}"

- name: Copy inventory
  copy:
    src: "{{ awx_home }}/installer/inventory"
    dest: "{{ awx_home }}/installer/inventory.local"
    remote_src: true
    force: false

- name: Set AWX tunables
  lineinfile:
    path: "{{ awx_home }}/installer/inventory.local"
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value }}"
  no_log: "{{ item.key == 'awx_secret_key' }}" # Don't log the secret key
  with_dict: "{{ awx_tunables }}"

# Build with official logos
- name: Clone official AWX logos
  git:
    repo: https://github.com/ansible/awx-logos
    dest: "{{ awx_home }}/../awx-logos"
  when: awx_tunables.awx_official | default(false)

- name: Create copy of the Docker role
  copy:
    src: "{{ awx_home }}/installer/local_docker/tasks/main.yml"
    dest: "{{ awx_home }}/installer/local_docker/tasks/main.yml.bak"
    remote_src: true
  when: awx_web_mounts is defined

- name: Patch in the volumes
  blockinfile:
    path: "{{ awx_home }}/installer/local_docker/tasks/main.yml"
    insertafter: "name: awx_web"
    block: |
      {{ "    " }}volumes:
        {% for mount in awx_web_mounts %}
          - "{{ mount.from }}:{{ mount.to | default(mount.from) }}:{% if mount.rw | default(false) %}rw{% else %}ro{% endif %}"
        {% endfor %}
  when: awx_web_mounts is defined

- name: Patch in the tmpfs for the worker
  blockinfile:
    path: "{{ awx_home }}/installer/local_docker/tasks/main.yml"
    insertafter: "name: awx_task"
    marker: "# {mark} ANSIBLE BLOCK FOR TMPFS"
    block: |
      {{ "    " }}tmpfs:
      {{ "      " }}- /tmp:exec
      {{ "      " }}- /run

- name: Build AWX
  command:
    cmd: ansible-playbook -i inventory.local install.yml
    chdir: "{{ awx_home }}/installer"
  register: out
  changed_when: "'changed=0' not in out.stdout"

- name: Restore the Docker role
  copy:
    src: "{{ awx_home }}/installer/local_docker/tasks/main.yml.bak"
    dest: "{{ awx_home }}/installer/local_docker/tasks/main.yml"
    remote_src: true
  when: awx_web_mounts is defined
